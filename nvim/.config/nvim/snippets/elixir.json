{
	// Place your snippets for elixir here. Each snippet is defined under a snippet name and has a prefix, body and
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"def function": {
		"prefix": "def",
		"body": [
			"@doc \"\"\"",
			"$1",
			"\"\"\"",
			"@spec $2($3) :: $4",
			"def $2($5) do",
			"  $6",
			"end"
		],
		"description": "def new function"
	},
	"def private function": {
		"prefix": "defp",
		"body": [
			"# $1",\
			"@spec $2($3) :: $4",
			"defp $2($5) do",
			"  $6",
			"end"
		],
		"description": "def new private module"
	},
	"def module": {
		"prefix": "defm",
		"body": [
			"defmodule $1 do",\
			"  @moduledoc \"\"\"",
			"  $2",
			"  \"\"\"",
			"end"
		],
		"description": "def new module"
	},
	"describe": {
		"prefix": "describe",
		"body": [
			"describe \"$1\" do",
			"  test \"$2\" do",
			"    $3",
			"  end",
			"end"
		],
		"description": "def new test"
	},
	"def test": {
		"prefix": "test",
		"body": [
			"test \"$1\" do",
			"  $2",
			"end"
		],
		"description": "def new test"
	},
	"def testconn": {
		"prefix": "test",
		"body": [
			"test \"$1\", %{conn: conn} do",
				"$2",
			"end"
		],
		"description": "def new test"
	},
	"ecto field": {
		"prefix": "field",
		"body": [
			"field $1, $2",
		],
		"description": "def new test"
	},
	"io inspect": {
		"prefix": "inspect",
		"body": [
			"|> IO.inspect(label: \"$1\")"
		],
		"description": "io.inspect"
	}
}
